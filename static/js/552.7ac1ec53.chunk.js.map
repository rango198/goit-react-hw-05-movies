{"version":3,"file":"static/js/552.7ac1ec53.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/notify/notify.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","components/FilterGenre/FilterGenre.jsx","pages/Movies.jsx","service/API.js"],"sourcesContent":["import { RotatingLines } from 'react-loader-spinner';\n\nconst Loader = ({ isLoading }) => {\n  return (\n    <RotatingLines\n      visible={true}\n      height=\"96\"\n      width=\"96\"\n      color=\"grey\"\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      ariaLabel=\"rotating-lines-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n    />\n  );\n};\n\nexport default Loader;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const Li = styled.li`\n  list-style: none;\n  padding: 15px;\n  margin: 0;\n`;\n\nexport const Links = styled(Link)`\n  text-decoration: none;\n  color: black;\n  :hover {\n    color: red;\n  }\n`;\n\nexport const Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  text-align: center;\n  width: 200px;\n  height: 355px;\n\n  :hover {\n    scale: 1.1;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 200px;\n`;\n","import { Outlet, useLocation } from 'react-router-dom';\nimport { List, Li, Links, Card, Img } from './MoviesList.styled';\nimport { Suspense } from 'react';\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <List>\n        {movies.map(({ id, title, poster_path }) => {\n          return (\n            <Li key={id}>\n              <Links to={`/movies/${id}`} state={{ from: location }}>\n                <Card>\n                  <Img\n                    src={\n                      poster_path\n                        ? `https://image.tmdb.org/t/p/w154/${poster_path}`\n                        : defaultImg\n                    }\n                    alt={title}\n                    width=\"250\"\n                    height=\"350\"\n                  />\n                  <p>{title}</p>\n                </Card>\n              </Links>\n            </Li>\n          );\n        })}\n      </List>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MoviesList;\n","export const notify = {\n  position: 'top-center',\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  theme: 'colored',\n};","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  cursor: pointer;\n  color: black;\n  border: 1px solid white;\n  border-radius: 15px;\n  padding: 10px 15px;\n  background: white;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: orangered;\n`;\n\nexport const Input = styled.input`\n  margin: 7px;\n  color: black;\n  border: 1px solid white;\n  border-radius: 15px;\n  padding: 10px 25px;\n  background: white;\n  max-width: 190px;\n`;\n","import { useState } from 'react';\nimport {  toast } from 'react-toastify';\nimport { notify } from '../notify/notify';\nimport { Form, Input, Button } from './SearchForm.styled';\nimport { AiOutlineSearch } from 'react-icons/ai';\n\n\nconst SearchForm = ({ onSearch }) => {\n  const [query, setQuery] = useState('');\n\n  const changeQuery = e => {\n    setQuery(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!query) return toast.error('Please enter a sometings', notify);\n    onSearch(query);\n    setQuery('');\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          placeholder=\"Enter for search movies\"\n          name=\"query\"\n          value={query}\n          onChange={changeQuery}\n        />\n        <Button type=\"submit\">\n          <AiOutlineSearch size=\"15\" />\n        </Button>\n      </Form>\n      \n    </>\n  );\n};\n\nexport default SearchForm;\n","import { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\n\nimport { fetchGenresMovies } from 'service/API';\n\nconst FilterGenres = ({ onSelect }) => {\n  const [genres, setGenres] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getGenresMovies = async () => {\n      try {\n        const genresData = await fetchGenresMovies();\n\n        setGenres(genresData);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    getGenresMovies();\n  }, []);\n\n  return (\n    <>\n      {' '}\n      <select\n        name=\"with_genres\"\n        onChange={event => onSelect(event.target.value)}\n      >\n        <option value=\"\">Select Genres</option>\n        {genres.map(genre => (\n          <option key={genre.id} value={genre.id}>\n            {genre.name}\n          </option>\n        ))}\n      </select>\n      {error &&\n        toast.error('Ooops... Something went wrong. Please try again later!')}\n    </>\n  );\n};\n\nexport default FilterGenres;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nimport Loader from 'components/Loader/Loader';\nimport { fetchFilters, fetchSearchMovies } from 'service/API';\nimport FilterGenres from 'components/FilterGenre/FilterGenre';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [selectedGenre, setSelectedGenre] = useState(null);\n\n  const moviesName = searchParams.get('query') ?? '';\n\n  const handleOnSubmit = query => {\n    const changeParams = query !== '' ? { query } : {};\n    setSearchParams(changeParams);\n  };\n\n  useEffect(() => {\n    if (!moviesName) return;\n\n    setLoading(true);\n    fetchSearchMovies(moviesName)\n      .then(({ results }) => {\n        setMovies(results);\n      })\n      .catch(error => setError(error))\n      .finally(() => setLoading(false));\n  }, [moviesName]);\n\n  useEffect(() => {\n    if (!selectedGenre) return;\n\n    setLoading(true);\n    fetchFilters(selectedGenre)\n      .then(results => {\n        setMovies(results);\n      })\n      .catch(error => setError(error))\n      .finally(() => setLoading(false));\n  }, [selectedGenre]);\n\n  return (\n    <>\n      {error && <h2>{error.message}</h2>}\n      <SearchForm value={moviesName} onSearch={handleOnSubmit} />\n      <FilterGenres onSelect={setSelectedGenre} />\n      {movies.length > 0 && <MoviesList movies={movies} />}\n      {loading && <Loader />}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'b271cc149eb4376b4bbb5a0b722032f8';\nconst params = `api_key=${API_KEY}&language=en-US`;\n\nexport const fetchTrending = async () => {\n  const res = await axios.get(`trending/movie/day?${params}`);\n  return res.data;\n};\n\nexport const fetchSearchMovies = async query => {\n  const res = await axios.get(\n    `search/movie?${params}&page=1&include_adult=false&query=${query}`\n  );\n  return res.data;\n};\n\nexport const fetchDetailsMovie = async movieId => {\n  const res = await axios.get(`movie/${movieId}?${params}`);\n  return res.data;\n};\n\nexport const fetchCast = async movieId => {\n  const res = await axios.get(`movie/${movieId}/credits?${params}`);\n  return res.data;\n};\n\nexport const fetchReviews = async movieId => {\n  const res = await axios.get(`movie/${movieId}/reviews?${params}&page=1`);\n  return res.data;\n};\n// ///////////////////////////\nexport const fetchGenresMovies = async id => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n    id: id,\n  });\n  const { data } = await axios.get('/genre/movie/list', { params });\n  return data.genres;\n};\n\nexport const fetchFilters = async genre => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n    with_genres: genre,\n  });\n\n  const { data } = await axios.get('/discover/movie', { params });\n  return data.results;\n};\n"],"names":["_ref","isLoading","_jsx","RotatingLines","visible","height","width","color","strokeWidth","animationDuration","ariaLabel","wrapperStyle","wrapperClass","List","styled","_templateObject","_taggedTemplateLiteral","Li","_templateObject2","Links","Link","_templateObject3","Card","_templateObject4","Img","_templateObject5","movies","location","useLocation","_jsxs","_Fragment","children","map","_ref2","id","title","poster_path","to","concat","state","from","src","alt","Suspense","fallback","Outlet","notify","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","Button","Form","Input","onSearch","_useState","useState","_useState2","_slicedToArray","query","setQuery","onSubmit","e","preventDefault","toast","type","placeholder","name","value","onChange","target","toLowerCase","AiOutlineSearch","size","onSelect","genres","setGenres","_useState3","_useState4","error","setError","useEffect","getGenresMovies","_asyncToGenerator","_regeneratorRuntime","_callee","genresData","_context","prev","next","fetchGenresMovies","sent","t0","stop","apply","arguments","event","genre","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","setMovies","loading","setLoading","_useState5","_useState6","_useState7","_useState8","selectedGenre","setSelectedGenre","moviesName","get","fetchSearchMovies","then","results","catch","finally","fetchFilters","message","SearchForm","FilterGenres","length","MoviesList","Loader","axios","API_KEY","params","fetchTrending","res","abrupt","data","_callee2","_context2","_x","fetchDetailsMovie","_ref3","_callee3","movieId","_context3","_x2","fetchCast","_ref4","_callee4","_context4","_x3","fetchReviews","_ref5","_callee5","_context5","_x4","_ref6","_callee6","_yield$axios$get","_context6","URLSearchParams","api_key","_x5","_ref7","_callee7","_yield$axios$get2","_context7","with_genres","_x6"],"sourceRoot":""}