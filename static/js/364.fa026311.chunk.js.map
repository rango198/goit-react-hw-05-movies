{"version":3,"file":"static/js/364.fa026311.chunk.js","mappings":"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","sources":["pages/MoviesDetails/MoviesDetails.styled.js","pages/MoviesDetails/MoviesDetails.jsx","service/API.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Wrap = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n`;\nexport const WrapContainer = styled.div`\n  margin-right: 30px;\n`;\n\nexport const Img = styled.img`\n  width: 200px;\n`;\n\nexport const Container = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  gap: 30px;\n  list-style: none;\n  padding-bottom: 15px;\n  border-bottom: 1px solid black;\n  color: black;\n`;\n\nexport const Links = styled(Link)`\n  text-decoration: none;\n  color: black;\n  outline: 2px solid black;\n  border-radius: 5px;\n  padding: 5px;\n\n  :hover {\n    background: tomato;\n    color: white;\n  }\n`;\n","import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchDetailsMovie } from '../../service/API';\n\nimport {\n  Wrap,\n  Img,\n  Container,\n  Links,\n  WrapContainer,\n} from './MoviesDetails.styled';\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nconst MoviesDetails = () => {\n  const [moviesDetails, setMoviesDetails] = useState({});\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backRef = useRef(location.state?.from ?? '/movies');\n  console.log(location);\n\n  useEffect(() => {\n    fetchDetailsMovie(movieId).then(setMoviesDetails);\n  }, [movieId]);\n\n  const { poster_path, title, genres, overview, vote_average, release_date } =\n    moviesDetails;\n\n  return (\n    <>\n      <Links to={backRef.current}>{'Come back'}</Links>\n\n      <Wrap>\n        <WrapContainer>\n          <Img\n            src={\n              poster_path\n                ? `http://image.tmdb.org/t/p/w342${poster_path}`\n                : defaultImg\n            }\n            alt={title}\n          />\n        </WrapContainer>\n        <div>\n          {title && (\n            <h2>\n              {title} {release_date.substr(0, 4)}\n            </h2>\n          )}\n\n          <p>User Score: {vote_average && Math.floor(vote_average * 10)}%</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          {genres && <p>{genres.map(({ name }) => name).join(', ')}</p>}\n        </div>\n      </Wrap>\n\n      <Container>\n        <h3>Additional information</h3>\n        <li>\n          <Links to=\"cast\">Cast</Links>\n        </li>\n        <li>\n          <Links to=\"reviews\">Reviews</Links>\n        </li>\n      </Container>\n\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MoviesDetails;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'b271cc149eb4376b4bbb5a0b722032f8';\nconst params = `api_key=${API_KEY}&language=en-US`;\n\nexport const fetchTrending = async () => {\n  const res = await axios.get(`trending/movie/day?${params}`);\n  return res.data;\n};\n\nexport const fetchSearchMovies = async query => {\n  const res = await axios.get(\n    `search/movie?${params}&page=1&include_adult=false&query=${query}`\n  );\n  return res.data;\n};\n\nexport const fetchDetailsMovie = async movieId => {\n  const res = await axios.get(`movie/${movieId}?${params}`);\n  return res.data;\n};\n\nexport const fetchCast = async movieId => {\n  const res = await axios.get(`movie/${movieId}/credits?${params}`);\n  return res.data;\n};\n\nexport const fetchReviews = async movieId => {\n  const res = await axios.get(`movie/${movieId}/reviews?${params}&page=1`);\n  return res.data;\n};\n// ///////////////////////////\nexport const fetchGenresMovies = async id => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n    id: id,\n  });\n  const { data } = await axios.get('/genre/movie/list', { params });\n  return data.genres;\n};\n\nexport const fetchFilters = async genre => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n    with_genres: genre,\n  });\n\n  const { data } = await axios.get('/discover/movie', { params });\n  return data.results;\n};\n"],"names":["Wrap","styled","_templateObject","_taggedTemplateLiteral","WrapContainer","_templateObject2","Img","_templateObject3","Container","_templateObject4","Links","Link","_templateObject5","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","moviesDetails","setMoviesDetails","movieId","useParams","location","useLocation","backRef","useRef","state","from","console","log","useEffect","fetchDetailsMovie","then","poster_path","title","genres","overview","vote_average","release_date","_jsxs","_Fragment","children","_jsx","to","current","src","concat","alt","substr","Math","floor","map","_ref","name","join","Suspense","fallback","Outlet","axios","API_KEY","params","fetchTrending","_asyncToGenerator","_regeneratorRuntime","_callee","res","_context","prev","next","sent","abrupt","data","stop","apply","arguments","fetchSearchMovies","_ref2","_callee2","query","_context2","_x","_ref3","_callee3","_context3","_x2","fetchCast","_ref4","_callee4","_context4","_x3","fetchReviews","_ref5","_callee5","_context5","_x4","fetchGenresMovies","_ref6","_callee6","id","_yield$axios$get","_context6","URLSearchParams","api_key","_x5","fetchFilters","_ref7","_callee7","genre","_yield$axios$get2","_context7","with_genres","results","_x6"],"sourceRoot":""}