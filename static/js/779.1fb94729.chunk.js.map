{"version":3,"file":"static/js/779.1fb94729.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","service/API.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Reviewscard = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  list-style: none;\n  gap: 10px;\n  padding: 10px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from '../../service/API';\nimport { Reviewscard } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [moviesReviews, setMoviesReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchReviews(movieId).then(({ results }) => {\n      setMoviesReviews(results);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      {moviesReviews.length > 0 ? (\n        moviesReviews.map(({ id, author, content }) => {\n          return (\n            <Reviewscard key={id}>\n              <li>\n                <b> Author: {author}</b>\n              </li>\n              <li>{content}</li>\n            </Reviewscard>\n          );\n        })\n      ) : (\n        <p>Sorry, we don`t have any review for this movie ü§∑üèº‚Äç‚ôÇÔ∏è</p>\n      )}\n    </>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'b271cc149eb4376b4bbb5a0b722032f8';\nconst params = `api_key=${API_KEY}&language=en-US`;\n\nexport const fetchTrending = async () => {\n  const res = await axios.get(`trending/movie/day?${params}`);\n  return res.data;\n};\n\nexport const fetchSearchMovies = async query => {\n  const res = await axios.get(\n    `search/movie?${params}&page=1&include_adult=false&query=${query}`\n  );\n  return res.data;\n};\n\nexport const fetchDetailsMovie = async movieId => {\n  const res = await axios.get(`movie/${movieId}?${params}`);\n  return res.data;\n};\n\nexport const fetchCast = async movieId => {\n  const res = await axios.get(`movie/${movieId}/credits?${params}`);\n  return res.data;\n};\n\nexport const fetchReviews = async movieId => {\n  const res = await axios.get(`movie/${movieId}/reviews?${params}&page=1`);\n  return res.data;\n};\n// ///////////////////////////\nexport const fetchGenresMovies = async id => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n    id: id,\n  });\n  const { data } = await axios.get('/genre/movie/list', { params });\n  return data.genres;\n};\n\nexport const fetchFilters = async genre => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n    with_genres: genre,\n  });\n\n  const { data } = await axios.get('/discover/movie', { params });\n  return data.results;\n};\n"],"names":["Reviewscard","styled","_templateObject","_taggedTemplateLiteral","_useState","useState","_useState2","_slicedToArray","moviesReviews","setMoviesReviews","movieId","useParams","useEffect","fetchReviews","then","_ref","results","_jsx","_Fragment","children","length","map","_ref2","id","author","content","_jsxs","axios","API_KEY","params","concat","fetchTrending","_asyncToGenerator","_regeneratorRuntime","_callee","res","_context","prev","next","sent","abrupt","data","stop","apply","arguments","fetchSearchMovies","_callee2","query","_context2","_x","fetchDetailsMovie","_ref3","_callee3","_context3","_x2","fetchCast","_ref4","_callee4","_context4","_x3","_ref5","_callee5","_context5","_x4","fetchGenresMovies","_ref6","_callee6","_yield$axios$get","_context6","URLSearchParams","api_key","genres","_x5","fetchFilters","_ref7","_callee7","genre","_yield$axios$get2","_context7","with_genres","_x6"],"sourceRoot":""}